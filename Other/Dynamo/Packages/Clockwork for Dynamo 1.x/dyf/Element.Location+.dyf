<Workspace Version="1.3.4.6666" X="74.6216216070283" Y="113.897253537078" zoom="0.835570252323159" ScaleFactor="1" Name="Element.Location+" Description="Returns the location of an element as an XYZ (or if it's line-based the start and end point of the line), along with some booleans to help filtering the results. Use this for some element types (e.g. walls or lines) that do not work with the built-in Get Family Instance Location node. " ID="0b59c4d8-afe4-4063-bf7e-2195fa33e8a9" Category="Clockwork.Revit.Elements.Element.Query">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="467e3f8f-3faf-49fc-94c3-76b1b0c59c5e" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="0" y="136" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="element" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="3ebf8af8-90b7-44f8-afdf-742ff53b9f65" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="829.411443410782" y="-13.753237059281" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="points" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="fe6d5941-e752-40bb-b243-e86bdd061ab9" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="829.411443410782" y="42.1780581895263" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="curveEndpoints" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="fef50bd5-ee46-46bb-bc91-c1d356b52c80" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="829.411443410782" y="98.1093534383336" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="curves" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="9c5fe234-6333-42d1-8497-fa4ae9ff0a2d" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="829.411443410782" y="154.040648687141" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="isPoint" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="21d34519-3cea-4d3f-b917-cbe99953d0f1" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="829.411443410782" y="209.971943935948" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="isCurve" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="bd3f39ee-762e-4a88-a57d-373694197124" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="551.355185870988" y="139.870950208536" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="seq[0];&#xA;seq[1];&#xA;seq[2];&#xA;seq[3];&#xA;seq[4];&#xA;seq[5];&#xA;seq[6];&#xA;seq[7];&#xA;seq[8];&#xA;seq[9];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="f9cf6ebe-4cb6-43a4-b682-f29bf6633963" type="PythonNodeModels.PythonNode" nickname="Python Script" x="404" y="136" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
import math
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

items = UnwrapElement(IN[0])

def GetCurvePoints(curve):
	return curve.GetEndPoint(0).ToPoint(), curve.GetEndPoint(1).ToPoint()

def GetLocation(item):
	# returns the following properties:
	# [0] point
	# [1] curve
	# [2] is point?
	# [3] is curve?
	# [4] has location?
	# [5] rotation angle
	# [6] has rotation?
	# [7] is curve loop?
	# [8] curve loop
	
	# default values
	point = None
	curveendpoints = None
	curve = None
	ispoint = False
	iscurve = False
	haslocation = False
	rotationangle = None
	hasrotation = False
	iscurveloop = False
	curveloop = None
	# template for return statements:
	# return point, curveendpoints, curve, ispoint, iscurve, haslocation, rotationangle, hasrotation, iscurveloop, curveloop
	
	# points and text notes
	if hasattr(item, "Coord"): 
		return item.Coord.ToPoint(), curveendpoints, curve, True, iscurve, True, rotationangle, hasrotation, iscurveloop, curveloop
	# stair runs and landings
	if hasattr(item, "GetFootprintBoundary"):
		footprint = [x.ToProtoType() for x in item.GetFootprintBoundary()]
		return point, curveendpoints, curve, ispoint, iscurve, True, rotationangle, hasrotation, True, footprint
	# grids, dimensions and boundary segments
	elif hasattr(item, "Curve"): 
		return point, GetCurvePoints(item.Curve), item.Curve.ToProtoType(), ispoint, True, True, rotationangle, hasrotation, iscurveloop, curveloop
	# curtain grid lines
	elif hasattr(item, "FullCurve"): 
		return point, GetCurvePoints(item.FullCurve), item.FullCurve.ToProtoType(), ispoint, True, True, rotationangle, hasrotation, iscurveloop, curveloop
	# curves
	elif hasattr(item, "GetEndpoint"): 
		return point, GetCurvePoints(item), item.ToProtoType(), ispoint, True, True, rotationangle, hasrotation, iscurveloop, curveloop
	# railings and top rails
	elif hasattr(item, "GetPath"):
		railpath = [x.ToProtoType() for x in item.GetPath()]
		# paths with multiple segments
		if len(railpath) &gt; 1: return point, curveendpoints, curve, ispoint, iscurve, True, rotationangle, hasrotation, True, railpath
		# paths with a single segment
		else: return point, GetCurvePoints(railpath[0].ToRevitType()), railpath[0], ispoint, True, True, rotationangle, hasrotation, iscurveloop, curveloop
	# openings
	elif hasattr(item, "BoundaryCurves"):
		# rectangular openings
		# ToDo: find a good way of returning the boundary as a curve loop
		# for now, return defaults in this case
		if item.IsRectBoundary:
			return point, curveendpoints, curve, ispoint, iscurve, haslocation, rotationangle, hasrotation, iscurveloop, curveloop
		# none-rectangular openings
		else: 
			openingloop = [x.ToProtoType() for x in item.BoundaryCurves]
			return point, curveendpoints, curve, ispoint, iscurve, True, rotationangle, hasrotation, True, openingloop
	# extrusion roofs
	elif hasattr(item, "GetProfile"):
		sketchloop = [x.GeometryCurve.ToProtoType() for x in item.GetProfile()]
		return point, curveendpoints, curve, ispoint, iscurve, True, rotationangle, hasrotation, True, sketchloop
	# other elements
	elif hasattr(item, "Location"):
		loc = item.Location
		if loc:
			# line-based elements (e.g. walls)
			if loc.ToString() == 'Autodesk.Revit.DB.LocationCurve':
				return point, GetCurvePoints(loc.Curve), loc.Curve.ToProtoType(), ispoint, True, True, rotationangle, hasrotation, iscurveloop, curveloop
			# point-based elements (e.g. most loadable families)
			elif loc.ToString() == 'Autodesk.Revit.DB.LocationPoint':
				if hasattr(loc, "Rotation"):
					rotationangle = math.degrees(loc.Rotation)
					hasrotation = True
				return loc.Point.ToPoint(), curveendpoints, curve, True, iscurve, True, rotationangle, hasrotation, iscurveloop, curveloop
			# some elements have a location property but don't return curves or points
			else:
				# sketch-based elements (e.g. floor slabs)
				try:
					sketchloop = []
					for ref in HostObjectUtils.GetTopFaces(item):
						boundaryloops = item.GetGeometryObjectFromReference(ref).GetEdgesAsCurveLoops()
						for loop in boundaryloops:
							sketchloop.append([x.ToProtoType() for x in loop])
					return point, curveendpoints, curve, ispoint, iscurve, True, rotationangle, hasrotation, True, sketchloop
				# other elements we can't process
				# return defaults in these cases
				except:
					return point, curveendpoints, curve, ispoint, iscurve, haslocation, rotationangle, hasrotation, iscurveloop, curveloop
		# some elements (e.g.groups, curtain panels etc.)  have a location property which only returns a NoneType
		# return defaults in these cases
		else: return point, curveendpoints, curve, ispoint, iscurve, haslocation, rotationangle, hasrotation, iscurveloop, curveloop
	# in all other cases return defaults
	else: return point, curveendpoints, curve, ispoint, iscurve, haslocation, rotationangle, hasrotation, iscurveloop, curveloop

locations = [GetLocation(x) for x in items]

# Transpose and remove NoneTypes
OUT = []
for prop in map(list, zip(*locations)):
	OUT.append(filter(lambda x: x!=None, prop))</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="f049edbf-dc90-4d9d-8d55-aec33858083d" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="829.411443410782" y="265.903239184756" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="hasLocation" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="14d49b05-5d40-4fbf-b0e4-71bfaaee0839" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="829.411443410782" y="321.834534433563" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="angle" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="83ee1aef-f798-4e80-8bef-4ac8b8479804" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="829.411443410782" y="377.76582968237" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="hasRotation" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="157124ef-0735-43df-b3be-fc62d61d9f09" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="TurnIntoList" x="141.892023898732" y="137.912442707094" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <ID value="cd09ad33-8c34-4850-ac26-24448d92c38f" />
      <Name value="TurnIntoList" />
      <Description value="Turns an element (or a nested list) into a flat list" />
      <Inputs>
        <Input value="unknownItem" />
      </Inputs>
      <Outputs>
        <Output value="seq" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="2b61f8fb-796b-4523-a3bc-00a3c5804bd4" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="835.313265954627" y="443.134620619139" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="hasMultipleCurves" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="0f4a063f-78d6-4b9c-ac40-e614f593607b" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="844.305070600477" y="504.552583680809" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="multipleCurves" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="467e3f8f-3faf-49fc-94c3-76b1b0c59c5e" start_index="0" end="157124ef-0735-43df-b3be-fc62d61d9f09" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="0" end="3ebf8af8-90b7-44f8-afdf-742ff53b9f65" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="1" end="fe6d5941-e752-40bb-b243-e86bdd061ab9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="2" end="fef50bd5-ee46-46bb-bc91-c1d356b52c80" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="3" end="9c5fe234-6333-42d1-8497-fa4ae9ff0a2d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="4" end="21d34519-3cea-4d3f-b917-cbe99953d0f1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="5" end="f049edbf-dc90-4d9d-8d55-aec33858083d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="6" end="14d49b05-5d40-4fbf-b0e4-71bfaaee0839" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="7" end="83ee1aef-f798-4e80-8bef-4ac8b8479804" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="8" end="2b61f8fb-796b-4523-a3bc-00a3c5804bd4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd3f39ee-762e-4a88-a57d-373694197124" start_index="9" end="0f4a063f-78d6-4b9c-ac40-e614f593607b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f9cf6ebe-4cb6-43a4-b682-f29bf6633963" start_index="0" end="bd3f39ee-762e-4a88-a57d-373694197124" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="157124ef-0735-43df-b3be-fc62d61d9f09" start_index="0" end="f9cf6ebe-4cb6-43a4-b682-f29bf6633963" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Hintergrundvorschau" eyeX="-28748.1653296167" eyeY="17999.6862979487" eyeZ="35887.0355071413" lookX="28735.5651413325" lookY="-17996.3707685405" lookZ="-35881.4900637913" upX="0.0977868465518001" upY="0.98768834059514" upZ="-0.12210435902898" />
  </Cameras>
</Workspace>