<Workspace Version="1.3.4.6666" X="85.454400119081" Y="120.070864095901" zoom="0.642869557405948" ScaleFactor="1" Name="View CreateViewTemplate" Description="Creates a new view template from a given view.&#xD;&#xA;Works only in Revit 2020 and later." ID="fd7b04b4-8385-42a7-b890-d6526251cd5a" Category="GeniusLoci.View">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="ea95f86f-c6d7-4440-9c7e-6b5cb998f653" type="PythonNodeModels.PythonNode" nickname="Python Script" x="367.676251298745" y="283.180483731825" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Alban de Chasteigner 2021
#twitter : @geniusloci_bim
#geniusloci.bim@gmail.com
#https://github.com/albandechasteigner/GeniusLociForDynamo
  
import clr
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import View,ViewType
clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.Elements)
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument

views = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]
viewTemplates=[]

#ueWrapper from Dimitar Venkov
ueWrapper = None
wrappers = clr.GetClrType(Revit.Elements.ElementWrapper).GetMethods()
for w in wrappers:
	if w.ToString().startswith("Revit.Elements.UnknownElement"):
		ueWrapper = w
		break
	
TransactionManager.Instance.EnsureInTransaction(doc)
for view in views:
	viewTemplate=view.CreateViewTemplate()
	try:
		viewTemplate.Name = view.Name
	except:pass
	if view.ViewType == ViewType.ThreeD :
		viewTemplates.append(ueWrapper.Invoke(None,(viewTemplate, True)))
	else: viewTemplates.append(viewTemplate)
TransactionManager.Instance.TransactionTaskDone()

if isinstance(IN[0], list): OUT = viewTemplates
else: OUT = viewTemplates[0]</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="fb6f72e4-1d09-44d2-83e0-1f7e1c15ab0e" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="204.076251298745" y="283.180483731825" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="view" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="dab98bea-1174-48bb-a5c8-1c8b0ac97374" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="592.076251298745" y="283.180483731825" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="ViewTemplate" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="ea95f86f-c6d7-4440-9c7e-6b5cb998f653" start_index="0" end="dab98bea-1174-48bb-a5c8-1c8b0ac97374" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fb6f72e4-1d09-44d2-83e0-1f7e1c15ab0e" start_index="0" end="ea95f86f-c6d7-4440-9c7e-6b5cb998f653" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Aperçu en arrière-plan" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>