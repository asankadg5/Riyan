<Workspace Version="1.3.4.6666" X="236.693702387426" Y="112.325817068163" zoom="0.437447777305622" ScaleFactor="1" Name="MEP LocationCurve" Description="MEP LocationCurve&#xD;&#xA;Gets the curve geometry from the MEP element (pipe, duct, cabletray, conduit, fitting, accessory).&#xD;&#xA;By Cyril Poupin on the Dynamo Forum" ID="df3a8834-12df-4701-aa8a-856e0713dda6" Category="GeniusLoci.MEP">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="ea7cc25d-28bb-4327-b076-7a27e25e0fa7" type="PythonNodeModels.PythonNode" nickname="Python Script" x="216" y="312.8" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#By Cyril Poupin on the Dynamo Forum
#https://forum.dynamobim.com/t/get-curves-from-piping/61867/2

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *
import Autodesk.Revit.DB as DB

clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

import System
from System.Collections.Generic import List

toList = lambda x : x if hasattr(x, '__iter__') else [x]
lstElemNetWork = toList(UnwrapElement(IN[0]))

lstDS_Geo = [] 
for e in lstElemNetWork:
	if isinstance(e.Location, LocationCurve):
		rvtCurve = e.Location.Curve
		lstDS_Geo.append(rvtCurve.ToProtoType())
	else:
		lstLines = []
		locPt = e.Location.Point
		connSet = e.MEPModel.ConnectorManager.Connectors
		lstConn = list(connSet)
		if connSet.Size == 1:
			lstDS_Geo.append(None)
		elif connSet.Size == 2:
			try:
				line = DB.Line.CreateBound(lstConn[0].Origin, lstConn[1].Origin)
				lstDS_Geo.append(line.ToProtoType())
			except:  
				# Unable to create Line. Points are likely coincident
				pline = DB.PolyLine.Create(List[XYZ]([lstConn[0].Origin, locPt, lstConn[1].Origin]))
				lstDS_Geo.append(pline.ToProtoType())
		elif connSet.Size == 3 and [con for con in connSet if con.Domain != Domain.DomainElectrical].Count == 2 :
			lstConn2=[con for con in connSet if con.Domain != Domain.DomainElectrical]
			line = DB.Line.CreateBound(lstConn2[0].Origin, lstConn2[1].Origin)
			lstDS_Geo.append(line.ToProtoType())		
		else:
			for con in connSet:
				#doc.Application.ShortCurveTolerance :
				if locPt.DistanceTo(con.Origin) &gt; 0.00256026455729167 and con.Domain != Domain.DomainElectrical : 
					line = DB.Line.CreateBound(locPt, con.Origin)
					lstLines.append(line.ToProtoType())
			lstDS_Geo.append(lstLines)
			
OUT = lstDS_Geo</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="c3edc6c9-c093-4d6e-9269-aea756d98920" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="394.4" y="306.4" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Curve" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="07b602c2-b4d0-42a8-89f2-1eef1fe1eab6" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-213.692027504557" y="314.650655964815" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Ducts or pipes, cable trays, conduits&#xD;&#xA;//Fittings and accessories&#xD;&#xA;element" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="ea7cc25d-28bb-4327-b076-7a27e25e0fa7" start_index="0" end="c3edc6c9-c093-4d6e-9269-aea756d98920" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="07b602c2-b4d0-42a8-89f2-1eef1fe1eab6" start_index="0" end="ea7cc25d-28bb-4327-b076-7a27e25e0fa7" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>