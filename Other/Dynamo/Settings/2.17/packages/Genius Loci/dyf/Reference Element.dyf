<Workspace Version="1.3.4.6666" X="36.23597105625" Y="93.9210370875" zoom="0.593767140625" ScaleFactor="1" Name="Reference Element" Description="Returns the Revit Element from a reference in the given document." ID="f7e3b768-e58a-4aaf-942f-73b4cae5d8a6" Category="GeniusLoci.Reference">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="2b509165-8552-4f24-a40c-1149bb45d894" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="353.2" y="256.4" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Autodesk.DB.Reference&#xD;&#xA;reference" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <PythonNodeModels.PythonNode guid="e0f4f8cf-27bf-43e2-807d-097b4dec4b09" type="PythonNodeModels.PythonNode" nickname="Python Script" x="608.595532186873" y="251.409942886649" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>#Alban de Chasteigner 2021
#twitter : @geniusloci_bim
#geniusloci.bim@gmail.com
#https://github.com/albandechasteigner/GeniusLociForDynamo
 
import clr
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager

references = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]
inputdoc = UnwrapElement(IN[1]) if isinstance(IN[1],list) else [UnwrapElement(IN[1])][0]

#Inspired by Clockwork
if inputdoc == None:
    doc = DocumentManager.Instance.CurrentDBDocument
elif isinstance (inputdoc, Document):
    doc = inputdoc
elif isinstance (inputdoc, RevitLinkInstance):
    doc = inputdoc.GetLinkDocument()
else: doc = DocumentManager.Instance.CurrentDBDocument

elements =[]
for reference in references:
	try:
		elem = doc.GetElement(reference)
		elements.append(elem)
	except:elements.append(None)

if isinstance(IN[0], list): OUT = elements
else: OUT = elements[0]</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="e8145f60-d6e2-42da-aeda-f51696760b3b" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="756.801780022298" y="249.388948597984" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Element" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="2f6feddf-8010-471f-9149-9bdc898ef3d3" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="133.670885336848" y="350.404481333661" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Use only if you want to query a linked model&#xD;&#xA;docOrRevitLinkInstance : var = null" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="2b509165-8552-4f24-a40c-1149bb45d894" start_index="0" end="e0f4f8cf-27bf-43e2-807d-097b4dec4b09" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e0f4f8cf-27bf-43e2-807d-097b4dec4b09" start_index="0" end="e8145f60-d6e2-42da-aeda-f51696760b3b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2f6feddf-8010-471f-9149-9bdc898ef3d3" start_index="0" end="e0f4f8cf-27bf-43e2-807d-097b4dec4b09" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Aperçu en arrière-plan" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>