<Workspace Version="1.3.4.6666" X="59.9644086009735" Y="-17.0606403803868" zoom="0.931811528498331" ScaleFactor="1" Name="Element Elevation" Description="Return the elevation (Z value) of the given element." ID="2ca258e0-6038-4c80-8848-4e2ace39332e" Category="GeniusLoci.Element">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="6600ecaf-9769-4de6-bb5b-8cee9be46601" type="PythonNodeModels.PythonNode" nickname="Python Script" x="311.6" y="330.8" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Alban de Chasteigner 202
#twitter : @geniusloci_bim
#geniusloci.bim@gmail.com
#https://github.com/albandechasteigner/GeniusLociForDynamo

import clr
# Import RevitAPI Classes
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument

elements = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]
result=[]

for element in elements :
	if hasattr(element, "Location"):
		loc = element.Location
		if loc:	
			# point-based elements (e.g. most loadable families)
			if isinstance(loc,LocationPoint):
				loca=loc.Point
			# line-based elements (e.g. walls)
			elif isinstance(loc,LocationCurve):
				try:loca=loc.Curve.Evaluate(0.5,True)
				except:loca=loc.Curve.Evaluate(0.5, False)
			elif isinstance(element,Instance):
				loca = element.GetTotalTransform().Origin
			elif hasattr(element, "Origin"):
				loca = element.Origin
			##Section Marker and ReferenceElevationMarker(Doesn't work for ReferenceElevationMarker)
			elif ElementId(BuiltInCategory.OST_Viewers) == element.Category.Id :
				viewSection = doc.GetElement(ElementId(element.Id.IntegerValue + 1))
				loca = viewSection.Origin
			#Elevation Marker
			elif isinstance(element,Autodesk.Revit.DB.ElevationMarker) :
				marker = doc.GetElement(ElementId(element.Id.IntegerValue + 1))
				box=marker.BoundingBox[doc.ActiveView]
				loca = (box.Min+box.Max)/2
			# Grid	
			elif isinstance(element,Autodesk.Revit.DB.Grid):
				loca=element.Curve.Evaluate(0.5,True)
			# view specific elements (e.g. filled regions)
			elif hasattr(element, "OwnerViewId") and element.OwnerViewId != ElementId.InvalidElementId :
				view=element.Document.GetElement(element.OwnerViewId)
				box = element.BoundingBox[view]
				loca = (box.Min+box.Max)/2
			# sketch-based elements (e.g. floors)
			else :
				box = element.get_BoundingBox(None)
				loca = (box.Min+box.Max)/2
			result.append(loca.ToPoint().Z)
	elif hasattr(element, "OwnerViewId"):
		view=element.Document.GetElement(element.OwnerViewId)
		box = element.BoundingBox[view]
		loca = (box.Min+box.Max)/2
		result.append(loca.ToPoint().Z)

if isinstance(IN[0], list): OUT = result
else: OUT = result[0]</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d1329160-67fa-42df-a1e7-a14bcd0d2bc6" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="194.619023106433" y="329.313340371867" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="element" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="4f48588b-e44c-4a05-8b74-829bb078a124" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="471.606281587082" y="331.233120454391" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="double" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="6600ecaf-9769-4de6-bb5b-8cee9be46601" start_index="0" end="4f48588b-e44c-4a05-8b74-829bb078a124" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d1329160-67fa-42df-a1e7-a14bcd0d2bc6" start_index="0" end="6600ecaf-9769-4de6-bb5b-8cee9be46601" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Aperçu en arrière-plan" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>