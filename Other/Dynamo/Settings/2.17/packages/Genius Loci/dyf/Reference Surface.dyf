<Workspace Version="1.3.4.6666" X="-63.1050182601343" Y="308.56660562145" zoom="0.65492525993494" ScaleFactor="1" Name="Reference Surface" Description="Obtains the Revit surface from a reference in the given document." ID="70d49a94-9d6a-4fec-94c7-59695fd71237" Category="GeniusLoci.Reference">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="5e1c1fb6-bd5d-4dd4-8ddc-bbac9f8f0712" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="412.8" y="-188.4" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="reference" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <PythonNodeModels.PythonNode guid="1c2e132b-bc6a-4967-b086-05b672adcff9" type="PythonNodeModels.PythonNode" nickname="Python Script" x="549.644867303523" y="-188.514817432876" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>#Alban de Chasteigner 2021
#twitter : @geniusloci_bim
#geniusloci.bim@gmail.com
#https://github.com/albandechasteigner/GeniusLociForDynamo
 
import clr
clr.AddReference('RevitAPI')
import Autodesk
from Autodesk.Revit.DB import *

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

references = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]
inputdoc = UnwrapElement(IN[1]) if isinstance(IN[1],list) else [UnwrapElement(IN[1])][0]

#Inspired by Clockwork
if inputdoc == None:
    doc = DocumentManager.Instance.CurrentDBDocument
elif isinstance (inputdoc, Document):
    doc = inputdoc
elif isinstance (inputdoc, RevitLinkInstance):
    doc = inputdoc.GetLinkDocument()
else: doc = DocumentManager.Instance.CurrentDBDocument

faces =[]
for reference in references:
	try:
		face = doc.GetElement(reference).GetGeometryObjectFromReference(reference)
		faces.append(face.ToProtoType()[0])
	except:faces.append(None)

if isinstance(IN[0], list): OUT = faces
else: OUT = faces[0]</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="fd35d4fd-ef93-4890-baad-07cf73490f99" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="706.845290092345" y="-190.362842922418" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="//Dynamo Surface&#xD;&#xA;Surface" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="20c1eb41-11f8-4bc1-8eb7-99848e072e03" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="95.7437773378347" y="-116.908921224165" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Use only if you want to query a linked model&#xD;&#xA;docOrRevitLinkInstance : var = null" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="5e1c1fb6-bd5d-4dd4-8ddc-bbac9f8f0712" start_index="0" end="1c2e132b-bc6a-4967-b086-05b672adcff9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1c2e132b-bc6a-4967-b086-05b672adcff9" start_index="0" end="fd35d4fd-ef93-4890-baad-07cf73490f99" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="20c1eb41-11f8-4bc1-8eb7-99848e072e03" start_index="0" end="1c2e132b-bc6a-4967-b086-05b672adcff9" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Aperçu en arrière-plan" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>